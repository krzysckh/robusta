#| doc
MIME types
|#
(define-library
  (robusta mime)

  (import
   (owl toplevel))

  (export
   path->mime
   ext->mime)

  (begin
    (define default-mime-type "text/plain")
    ;; source: OpenBSD /usr/share/misc/mime.types
    (define mime-type-alist
      '((atom           . "application/atom+xml")
        (woff           . "application/font-woff")
        (jar            . "application/java-archive")
        (war            . "application/java-archive")
        (ear            . "application/java-archive")
        (js             . "application/javascript")
        (json           . "application/json")
        (hqx            . "application/mac-binhex40")
        (doc            . "application/msword")
        (bin            . "application/octet-stream")
        (exe            . "application/octet-stream")
        (dll            . "application/octet-stream")
        (deb            . "application/octet-stream")
        (dmg            . "application/octet-stream")
        (fs             . "application/octet-stream")
        (iso            . "application/octet-stream")
        (img            . "application/octet-stream")
        (msi            . "application/octet-stream")
        (msp            . "application/octet-stream")
        (msm            . "application/octet-stream")
        (pdf            . "application/pdf")
        (ps             . "application/postscript")
        (eps            . "application/postscript")
        (ai             . "application/postscript")
        (rss            . "application/rss+xml")
        (rtf            . "application/rtf")
        (m3u8           . "application/vnd.apple.mpegurl")
        (kml            . "application/vnd.google-earth.kml+xml")
        (kmz            . "application/vnd.google-earth.kmz")
        (xls            . "application/vnd.ms-excel")
        (eot            . "application/vnd.ms-fontobject")
        (ppt            . "application/vnd.ms-powerpoint")
        (odc            . "application/vnd.oasis.opendocument.chart")
        (otc            . "application/vnd.oasis.opendocument.chart-template")
        (odb            . "application/vnd.oasis.opendocument.database")
        (odf            . "application/vnd.oasis.opendocument.formula")
        (otf            . "application/vnd.oasis.opendocument.formula-template")
        (odg            . "application/vnd.oasis.opendocument.graphics")
        (otg            . "application/vnd.oasis.opendocument.graphics-template")
        (odi            . "application/vnd.oasis.opendocument.image")
        (oti            . "application/vnd.oasis.opendocument.image-template")
        (odp            . "application/vnd.oasis.opendocument.presentation")
        (otp            . "application/vnd.oasis.opendocument.presentation-template")
        (ods            . "application/vnd.oasis.opendocument.spreadsheet")
        (ots            . "application/vnd.oasis.opendocument.spreadsheet-template")
        (odt            . "application/vnd.oasis.opendocument.text")
        (odm            . "application/vnd.oasis.opendocument.text-master")
        (ott            . "application/vnd.oasis.opendocument.text-template")
        (oth            . "application/vnd.oasis.opendocument.text-web")
        (wmlc           . "application/vnd.wap.wmlc")
        (7z             . "application/x-7z-compressed")
        (cco            . "application/x-cocoa")
        (jardiff        . "application/x-java-archive-diff")
        (jnlp           . "application/x-java-jnlp-file")
        (run            . "application/x-makeself")
        (pac            . "application/x-ns-proxy-autoconfig")
        (pl             . "application/x-perl")
        (pm             . "application/x-perl")
        (prc            . "application/x-pilot")
        (pdb            . "application/x-pilot")
        (rar            . "application/x-rar-compressed")
        (rpm            . "application/x-redhat-package-manager")
        (sea            . "application/x-sea")
        (swf            . "application/x-shockwave-flash")
        (sit            . "application/x-stuffit")
        (tcl            . "application/x-tcl")
        (tk             . "application/x-tcl")
        (der            . "application/x-x509-ca-cert")
        (pem            . "application/x-x509-ca-cert")
        (crt            . "application/x-x509-ca-cert")
        (xpi            . "application/x-xpinstall")
        (xhtml          . "application/xhtml+xml")
        (zip            . "application/zip")
        (au             . "audio/basic")
        (snd            . "audio/basic")
        (mid            . "audio/midi")
        (midi           . "audio/midi")
        (kar            . "audio/midi")
        (mp3            . "audio/mpeg")
        (ogg            . "audio/ogg")
        (m4a            . "audio/x-m4a")
        (ra             . "audio/x-realaudio")
        (gif            . "image/gif")
        (jpeg           . "image/jpeg")
        (jpg            . "image/jpeg")
        (png            . "image/png")
        (svg            . "image/svg+xml")
        (svgz           . "image/svg+xml")
        (tif            . "image/tiff")
        (tiff           . "image/tiff")
        (wbmp           . "image/vnd.wap.wbmp")
        (webp           . "image/webp")
        (ico            . "image/x-icon")
        (jng            . "image/x-jng")
        (bmp            . "image/x-ms-bmp")
        (css            . "text/css")
        (html           . "text/html")
        (htm            . "text/html")
        (shtml          . "text/html")
        (mml            . "text/mathml")
        (txt            . "text/plain")
        (jad            . "text/vnd.sun.j2me.app-descriptor")
        (wml            . "text/vnd.wap.wml")
        (htc            . "text/x-component")
        (xml            . "text/xml")
        (3gpp           . "video/3gpp")
        (3gp            . "video/3gpp")
        (ts             . "video/mp2t")
        (mp4            . "video/mp4")
        (mpeg           . "video/mpeg")
        (mpg            . "video/mpeg")
        (mov            . "video/quicktime")
        (webm           . "video/webm")
        (flv            . "video/x-flv")
        (m4v            . "video/x-m4v")
        (mkv            . "video/x-matroska")
        (mng            . "video/x-mng")
        (asx            . "video/x-ms-asf")
        (asf            . "video/x-ms-asf")
        (wmv            . "video/x-ms-wmv")
        (avi            . "video/x-msvideo")))

    (define (ext->mime ext)
      (let* ((E (if (string? ext) (string->symbol ext) ext))
             (m (assq E mime-type-alist)))
        (if m (cdr m) default-mime-type)))

    (define (path->mime p)
      (ext->mime (last ((string->regex "c/\\./") p) "")))))
